"use strict";var precacheConfig=[["/index.html","84b3b6a8a39a7dcb6ba461a10ae975ed"],["/static/css/main.a96b2205.css","39f1c40c7e3074ea1d4fb7772ebb5017"],["/static/js/main.70b3bfa9.js","8bf79a5d073e391c0c0a228f19eff6e4"],["/static/media/Aladdin.305f9d62.jpg","305f9d62dbaccb39f4975f58cc15aa8e"],["/static/media/Antman.5e84dae0.jpg","5e84dae0e874818768259a2d91b40392"],["/static/media/Aquaman.c54efa7b.jpg","c54efa7be87aa81b75f199025377e5bc"],["/static/media/Cinderella.4abeff16.jpg","4abeff16fdfb5df7b9e1f6d0aadb01a4"],["/static/media/Dog Day Afternoon.d58afc7f.jpg","d58afc7fd67cf5828ef0a5f4d1fe22f1"],["/static/media/Harry Potter.6fc2b2e8.jpg","6fc2b2e8687af84b52932962ea0971e2"],["/static/media/Lord of the Rings.d667e3d6.jpg","d667e3d609ca9b5561861de63d2f3cfd"],["/static/media/Peter Pan.110247dc.jpg","110247dc828dd32a229c65d5136b74ef"],["/static/media/Robin Hood.babe0498.jpg","babe049820ae617d5aaeb446a90def79"],["/static/media/Snow White.e64788e0.jpg","e64788e095b5cd7172bb2acb28902dd5"],["/static/media/The Lion King.4deb14d7.jpg","4deb14d7dcca64065d07ace9a327bdcc"],["/static/media/The Little Mermaid.cf7983a9.jpg","cf7983a9ddcf49ea54e95832ebe0a37f"],["/static/media/Thor.a0c2f81f.jpg","a0c2f81f219b720417d0d6d560410de1"],["/static/media/Titanic.55cdba1a.jpg","55cdba1a123b3a1417ff8b082b8cbe50"],["/static/media/Troy.d0b3d3a1.jpg","d0b3d3a195a7bce6660e95acc47621ba"],["/static/media/Venom.53cbe013.jpg","53cbe013fe07a4b0f5eb1841532eeb0e"],["/static/media/batman.e23ffc3d.jpg","e23ffc3dabf2ede086aa4c8c37cbe10d"],["/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/static/media/spiderman.2aafe54f.jpg","2aafe54f73f725948544c931efffcdc9"],["/static/media/xman.a97ca235.jpg","a97ca235d7c7292ce8bbe02734e6c5d3"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var c="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});